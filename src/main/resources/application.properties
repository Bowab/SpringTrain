# MySQL properties
spring.datasource.url=jdbc:mysql://localhost:3306/profiletowerdb?useSSL=false
spring.datasource.username=root
spring.datasource.password=kallesql23
spring.jpa.hibernate.ddl-auto=update

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

spring.thymeleaf.cache= false

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.show-sql = true


# Remove and replace with other queries.
spring.queries.users-query=select username, password, enabled from user where username=?
spring.queries.roles-query=select u.username, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.username=?